# --------------------------------------------------
# Stage 1: Builder
# --------------------------------------------------

FROM python:3.11-slim

WORKDIR /builder

# Installing system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libffi-dev \
    libssl-dev \
    gcc g++ make cmake clang z3 \
    libgomp1 \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir --upgrade pip setuptools wheel build

RUN git clone https://github.com/martineberlein/debugging-benchmark.git

WORKDIR /builder/debugging-benchmark

RUN pip install .


WORKDIR /builder/fandango-learn

COPY . /builder/fandango-learn

RUN pip install .

WORKDIR /app

COPY requirements.txt /tmp/requirements.txt

# Installing package wheel + the runtime dependencies
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r /tmp/requirements.txt \
    && rm -rf /tmp/requirements.txt

# Dependencies for pyenv
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt-get install -y tzdata
RUN apt-get -y install make build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
# Install pyenv
RUN git clone --depth=1 https://github.com/pyenv/pyenv.git $PYENV_ROOT

COPY ./doc/demo.py /app/demo.py

COPY ./evaluation /app/evaluation

CMD ["tail", "-f", "/dev/null"]
